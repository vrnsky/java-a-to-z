package start;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * @author vrnsky
 * @version 0.1.
 * <p>
 * It class provide functions for comfort testing.
 * @since 14.04.2017
 */
public class DBTestUtil {

    /**
     * Settings.
     */
    private Settings settings;

    /**
     * Url to the database.
     */
    private String dbUrl;

    /**
     * Database user.
     */
    private String dbUser;

    /**
     * Database password.
     */
    private String dbPassword;

    /**
     * Create a new utils.
     */
    public DBTestUtil() {
        settings = new Settings();
        this.init();
    }

    /**
     * Create item table in database.
     */
    public void createItemTable() {
        Statement statement = null;
        Connection connection = null;
        try {
            connection = DriverManager.getConnection(this.dbUrl, this.dbUser, this.dbPassword);
            statement = connection.createStatement();
            statement.executeUpdate("create table if not exists items("
                    +
                    "id integer GENERATED BY DEFAULT AS IDENTITY  (START WITH 1, INCREMENT BY 1) not NULL ,"
                    +
                    "item_name character varying(200),"
                    +
                    "description character varying(2000),"
                    +
                    "create_time timestamp default now(), PRIMARY KEY (id))");
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (statement != null) {
                try {
                    statement.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }

            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    /**
     * Crate comment table in database.
     */
    public void createCommentTable() {
        Statement statement = null;
        Connection connection = null;
        try {
            connection = DriverManager.getConnection(this.dbUrl, this.dbUser, this.dbPassword);
            statement = connection.createStatement();
            statement.executeUpdate("create table if not exists comments("
                    +
                    "id integer GENERATED BY DEFAULT AS IDENTITY  (START WITH 1, INCREMENT BY 1) not NULL,"
                    +
                    "text character varying(2000),"
                    +
                    "item_id integer references items(id), PRIMARY KEY (id))");
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (statement != null) {
                try {
                    statement.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }

            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    /**
     * Drop table from database.
     *
     * @param table table from database.
     */
    public void dropTable(String table) {
        Statement statement = null;
        Connection connection = null;
        try {
            connection = DriverManager.getConnection(this.dbUrl, this.dbUser, this.dbPassword);
            statement = connection.createStatement();
            statement.executeUpdate(String.format("drop table %s if exists CASCADE", table));
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (statement != null) {
                try {
                    statement.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }

            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    /**
     * Init all needs variables.
     */
    private void init() {
        settings.load(Settings.class.getClassLoader().getResourceAsStream("db.properties"));
        this.dbUrl = this.settings.getProperty("DB_URL");
        this.dbUser = this.settings.getProperty("DB_USER");
        this.dbPassword = this.settings.getProperty("DB_PASSWORD");
        String dbDriver = this.settings.getProperty("DB_DRIVER");
        try {
            Class.forName(dbDriver);
        } catch (ClassNotFoundException exp) {
            exp.printStackTrace();
        }
    }
}
